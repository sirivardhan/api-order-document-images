<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd">
    <munit:config mock-connectors="false" mock-inbounds="false" name="munit" doc:name="MUnit configuration"/>
    <spring:beans>
        <spring:import resource="classpath:order-document-images.xml"/>
        <spring:import resource="classpath:globals.xml"/>
        <spring:import resource="classpath:global_exception_handler.xml"/>
    </spring:beans>
    <munit:test name="order-document-images-test-suite-post:/documentImage:application/json:order-document-images-configTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Obtain PDF Service']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('ObtainPDF_response').asString()]"/>
        </mock:when>
        <munit:set payload="#[getResource('ObtainPDF_request.json').asString()]" mimeType="application/json" doc:name="Set Message"/>
        <flow-ref name="post:/documentImage:application/json:order-document-images-config" doc:name="Flow-ref to post:/documentImage:application/json:order-document-images-config"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
    <munit:test name="order-document-images-test-suite-get:/documents:order-document-images-configTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Obtain IPM service']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('ObtainIPM_response.json').asString()]"/>
        </mock:when>
        <munit:set payload="#[]" doc:name="Set Message">
            <munit:inbound-properties>
                <munit:inbound-property key="http.query.params" value="[['orderNumber':'9266953']]"/>
            </munit:inbound-properties>
        </munit:set>
        <flow-ref name="get:/documents:order-document-images-config" doc:name="Flow-ref to get:/documents:order-document-images-config"/>
        <munit:assert-not-null doc:name="Assert Not Null Payload"/>
    </munit:test>
</mule>
